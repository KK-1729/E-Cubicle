{
  "_args": [
    [
      {
        "raw": "optional-require@^1.0.2",
        "scope": null,
        "escapedName": "optional-require",
        "name": "optional-require",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Me\\Desktop\\ToDoList-master\\node_modules\\mongodb"
    ]
  ],
  "_from": "optional-require@^1.0.2",
  "_hasShrinkwrap": false,
  "_id": "optional-require@1.0.3",
  "_location": "/optional-require",
  "_nodeVersion": "14.16.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/optional-require_1.0.3_1618087099053_0.13518697121150391"
  },
  "_npmUser": {
    "name": "jchip",
    "email": "joel123@gmail.com"
  },
  "_npmVersion": "6.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "optional-require@^1.0.2",
    "scope": null,
    "escapedName": "optional-require",
    "name": "optional-require",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mongodb"
  ],
  "_resolved": "https://registry.npmjs.org/optional-require/-/optional-require-1.0.3.tgz",
  "_shasum": "275b8e9df1dc6a17ad155369c2422a440f89cb07",
  "_shrinkwrap": null,
  "_spec": "optional-require@^1.0.2",
  "_where": "C:\\Users\\Me\\Desktop\\ToDoList-master\\node_modules\\mongodb",
  "author": {
    "name": "Joel Chen"
  },
  "bugs": {
    "url": "https://github.com/jchip/optional-require/issues"
  },
  "dependencies": {},
  "description": "NodeJS Require that let you handle module not found error without try/catch",
  "devDependencies": {
    "chai": "^3.5.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "prettier": "1.19.1",
    "require-at": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RV2Zp2MY2aeYK5G+B/Sps8lW5NHAzE5QClbFP15j+PWmP+T9PxlJXBOOLoSAdgwFvS4t0aMR4vpedMkbHfh0nA==",
    "shasum": "275b8e9df1dc6a17ad155369c2422a440f89cb07",
    "tarball": "https://registry.npmjs.org/optional-require/-/optional-require-1.0.3.tgz",
    "fileCount": 3,
    "unpackedSize": 7400,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgcgy7CRA9TVsSAnZWagAAVdkP/RuyXV42Eh23kXEkVatW\nw+D8X8gOchs626w3zlb3Y3iI5HJpj+vvGJYTpR+sxpWS7oIBuaRN1N0O/aOY\nAFvGCo6iPcKO+nd6wKdogtm8SVwDAMHYB7OWWz91Op/DwxrxrX7qazjn8etv\naJOACTmlX3RsTj2vdPMTw/aUUYl9C4gmBMNsP04ili15tDkW4Q1TRNyy+TpB\noTDi3M2iO5//BI15OHTPMHYpbm+xosegCiYvTAzsKMIjfbhOTTM28tWuKx1/\nBb7OdESHxiwWnpa/C4no06Tophw/dkSqFVhBhAPDrUr/FCb2Evitbf39tkFT\nHaaK7XFbpDK5gfPfwcbs2NsY5bnATerni3dnQuwn1KWuRMCpLaqTIuBeY7nj\nvVivqdbQpDJ/KEvyBQUchdepCqm4VF/NHaUaKQwBflDbLmmc+G7m1gPpGeNy\nBepfgfxgsHqk/Rj6l0HhMYI5I/zaSu3ZC3bJnr/KFYCwE8XAu9zHuVEpO+PM\nJBdOxH9wXiKDmoSUibyCXj//qknihVZlHERRy0jYaWQeUXNLigjBCSKU4eym\nh4IwLYlnHhNYbk2eF63lE4vWfdHnGq89vwglnhPt4J9GI+lYzEwea0pQNP0u\n0q9u5EsTyQDCFn40AJyb7H/lR+3eRZJXamnyU9hsRGbnsti7l/27kEAVT7nM\nqZSn\r\n=yK/7\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "8808ec4401435a404d7d0319f2e95ef36b6e5d07",
  "homepage": "https://github.com/jchip/optional-require#readme",
  "keywords": [
    "optional require",
    "optional",
    "require"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jchip",
      "email": "joel123@gmail.com"
    }
  ],
  "name": "optional-require",
  "optionalDependencies": {},
  "prettier": {
    "printWidth": 120
  },
  "readme": "[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]\n[![Dependency Status][daviddm-image]][daviddm-url] [![devDependency Status][daviddm-dev-image]][daviddm-dev-url]\n\n# Optional Require\n\nNodeJS Require that let you handle module not found error without try/catch.  Allows you to gracefully require a module only if it exists and contains no error.\n\n# Usage\n\n```js\nconst optionalRequire = require(\"optional-require\")(require);\n\nconst foo = optionalRequire(\"foo\") || {};\nconst bar = optionalRequire(\"bar\", true); // true enables console.log a message when not found\nconst xyz = optionalRequire(\"xyz\", \"test\"); // \"test\" enables console.log a message with \"test\" added.\nconst fbPath = optionalRequire.resolve(\"foo\", \"foo doesn't exist\");\nconst rel = optionalRequire(\"../foo/bar\"); // relative module path works\n```\n\n# Install\n\n```bash\n$ npm i optional-require --save\n```\n\n# API\n\n#### [optionalRequire(require)](#optionalrequirerequire)\n\nThe single function this module exports.  Call it with `require` to get a custom function for you to do optional require from your file's require context.  See [Usage](#usage) above.\n\n#### [customOptionalRequire(path, \\[message|options\\])](#customoptionalrequirepath-messageoptions)\n\nThe function [optionalRequire](#optionalrequirerequire) returns for you to do optional require from your file's require context.\n\n##### Params\n\n-   `path` - name/path to the module your want to optionally require\n-   `message` - optional flag/message to enable `console.log` a message when module is not found\n-   `options` - an optional object with the following fields\n    -   `message` - see above\n    -   `fail` - callback for when an error that's _not_ `MODULE_NOT_FOUND` for `path` occurred\n    -   `notFound` - callback for when `path` was not found\n        -   The value from this is returned\n    -   `default` - default value to returned when not found - not allowed with `notFound` together\n\n##### Returns\n\n-   module required or one of the following if not found\n    -   `undefined` or\n    -   return value from `options.notFound` if it's specified\n    -   `options.default` if it's specified\n\n##### Throws\n\n-   rethrows any error that's not `MODULE_NOT_FOUND` for the module `path`\n\n#### [customOptionalRequire.resolve(path, \\[message\\])](#customoptionalrequireresolvepath-message)\n\nSame as [customOptionalRequire](#customoptionalrequirepath-messageoptions) but acts like `require.resolve`\n\n#### [optionalRequire.log(message, path)](#optionalrequirelogmessage-path)\n\nThe function that will be called to log the message when optional module is not found.  You can override this with your own function.\n\n#### [optionalRequire.try(require, path, \\[message|options\\])](#optionalrequiretryrequire-path-messageoptions)\n\nSame as [customOptionalRequire](#customoptionalrequirepath-messageoptions) but you have to pass in `require` from your file's context.\n\n#### [optionalRequire.resolve(require, path, \\[message|options\\])](#optionalrequireresolverequire-path-messageoptions)\n\nSame as [customOptionalRequire.resolve](#customoptionalrequirepath-messageoptions) but you have to pass in `require` from your file's context.\n\n# LICENSE\n\nApache-2.0 Â© [Joel Chen](https://github.com/jchip)\n\n[travis-image]: https://travis-ci.org/jchip/optional-require.svg?branch=master\n\n[travis-url]: https://travis-ci.org/jchip/optional-require\n\n[npm-image]: https://badge.fury.io/js/optional-require.svg\n\n[npm-url]: https://npmjs.org/package/optional-require\n\n[daviddm-image]: https://david-dm.org/jchip/optional-require/status.svg\n\n[daviddm-url]: https://david-dm.org/jchip/optional-require\n\n[daviddm-dev-image]: https://david-dm.org/jchip/optional-require/dev-status.svg\n\n[daviddm-dev-url]: https://david-dm.org/jchip/optional-require?type=dev\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jchip/optional-require.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- test/spec/*.js",
    "test": "mocha test/spec"
  },
  "version": "1.0.3"
}
